{
  "version": 3,
  "sources": ["../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/*\n* When adding modules to the namespace, ensure that they are added in alphabetical order according to module name.\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils-define-read-only-property' );\n\n\n// MAIN //\n\n/**\n* Top-level namespace.\n*\n* @namespace random\n*/\nvar random = {};\n\n/**\n* @name arcsine\n* @memberof random\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/base/arcsine}\n*/\nsetReadOnly( random, 'arcsine', require( '@stdlib/random-base-arcsine' ) );\n\n/**\n* @name bernoulli\n* @memberof random\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/base/bernoulli}\n*/\nsetReadOnly( random, 'bernoulli', require( '@stdlib/random-base-bernoulli' ) );\n\n/**\n* @name beta\n* @memberof random\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/base/beta}\n*/\nsetReadOnly( random, 'beta', require( '@stdlib/random-base-beta' ) );\n\n/**\n* @name betaprime\n* @memberof random\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/base/betaprime}\n*/\nsetReadOnly( random, 'betaprime', require( '@stdlib/random-base-betaprime' ) );\n\n/**\n* @name binomial\n* @memberof random\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/base/binomial}\n*/\nsetReadOnly( random, 'binomial', require( '@stdlib/random-base-binomial' ) );\n\n/**\n* @name boxMuller\n* @memberof random\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/base/box-muller}\n*/\nsetReadOnly( random, 'boxMuller', require( '@stdlib/random-base-box-muller' ) );\n\n/**\n* @name cauchy\n* @memberof random\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/base/cauchy}\n*/\nsetReadOnly( random, 'cauchy', require( '@stdlib/random-base-cauchy' ) );\n\n/**\n* @name chi\n* @memberof random\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/base/chi}\n*/\nsetReadOnly( random, 'chi', require( '@stdlib/random-base-chi' ) );\n\n/**\n* @name chisquare\n* @memberof random\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/base/chisquare}\n*/\nsetReadOnly( random, 'chisquare', require( '@stdlib/random-base-chisquare' ) );\n\n/**\n* @name cosine\n* @memberof random\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/base/cosine}\n*/\nsetReadOnly( random, 'cosine', require( '@stdlib/random-base-cosine' ) );\n\n/**\n* @name discreteUniform\n* @memberof random\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/base/discrete-uniform}\n*/\nsetReadOnly( random, 'discreteUniform', require( '@stdlib/random-base-discrete-uniform' ) );\n\n/**\n* @name erlang\n* @memberof random\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/base/erlang}\n*/\nsetReadOnly( random, 'erlang', require( '@stdlib/random-base-erlang' ) );\n\n/**\n* @name exponential\n* @memberof random\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/base/exponential}\n*/\nsetReadOnly( random, 'exponential', require( '@stdlib/random-base-exponential' ) );\n\n/**\n* @name f\n* @memberof random\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/base/f}\n*/\nsetReadOnly( random, 'f', require( '@stdlib/random-base-f' ) );\n\n/**\n* @name frechet\n* @memberof random\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/base/frechet}\n*/\nsetReadOnly( random, 'frechet', require( '@stdlib/random-base-frechet' ) );\n\n/**\n* @name gamma\n* @memberof random\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/base/gamma}\n*/\nsetReadOnly( random, 'gamma', require( '@stdlib/random-base-gamma' ) );\n\n/**\n* @name geometric\n* @memberof random\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/base/geometric}\n*/\nsetReadOnly( random, 'geometric', require( '@stdlib/random-base-geometric' ) );\n\n/**\n* @name gumbel\n* @memberof random\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/base/gumbel}\n*/\nsetReadOnly( random, 'gumbel', require( '@stdlib/random-base-gumbel' ) );\n\n/**\n* @name hypergeometric\n* @memberof random\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/base/hypergeometric}\n*/\n\nsetReadOnly( random, 'hypergeometric', require( '@stdlib/random-base-hypergeometric' ) );\n\n/**\n* @name improvedZiggurat\n* @memberof random\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/base/improved-ziggurat}\n*/\nsetReadOnly( random, 'improvedZiggurat', require( '@stdlib/random-base-improved-ziggurat' ) );\n\n/**\n* @name invgamma\n* @memberof random\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/base/invgamma}\n*/\nsetReadOnly( random, 'invgamma', require( '@stdlib/random-base-invgamma' ) );\n\n/**\n* @name kumaraswamy\n* @memberof random\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/base/kumaraswamy}\n*/\nsetReadOnly( random, 'kumaraswamy', require( '@stdlib/random-base-kumaraswamy' ) );\n\n/**\n* @name laplace\n* @memberof random\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/base/laplace}\n*/\nsetReadOnly( random, 'laplace', require( '@stdlib/random-base-laplace' ) );\n\n/**\n* @name levy\n* @memberof random\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/base/levy}\n*/\nsetReadOnly( random, 'levy', require( '@stdlib/random-base-levy' ) );\n\n/**\n* @name logistic\n* @memberof random\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/base/logistic}\n*/\nsetReadOnly( random, 'logistic', require( '@stdlib/random-base-logistic' ) );\n\n/**\n* @name lognormal\n* @memberof random\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/base/lognormal}\n*/\nsetReadOnly( random, 'lognormal', require( '@stdlib/random-base-lognormal' ) );\n\n/**\n* @name minstd\n* @memberof random\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/base/minstd}\n*/\nsetReadOnly( random, 'minstd', require( '@stdlib/random-base-minstd' ) );\n\n/**\n* @name minstdShuffle\n* @memberof random\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/base/minstd-shuffle}\n*/\nsetReadOnly( random, 'minstdShuffle', require( '@stdlib/random-base-minstd-shuffle' ) );\n\n/**\n* @name mt19937\n* @memberof random\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/base/mt19937}\n*/\nsetReadOnly( random, 'mt19937', require( '@stdlib/random-base-mt19937' ) );\n\n/**\n* @name negativeBinomial\n* @memberof random\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/base/negative-binomial}\n*/\nsetReadOnly( random, 'negativeBinomial', require( '@stdlib/random-base-negative-binomial' ) );\n\n/**\n* @name normal\n* @memberof random\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/base/normal}\n*/\nsetReadOnly( random, 'normal', require( '@stdlib/random-base-normal' ) );\n\n/**\n* @name pareto1\n* @memberof random\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/base/pareto-type1}\n*/\nsetReadOnly( random, 'pareto1', require( '@stdlib/random-base-pareto-type1' ) );\n\n/**\n* @name poisson\n* @memberof random\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/base/poisson}\n*/\nsetReadOnly( random, 'poisson', require( '@stdlib/random-base-poisson' ) );\n\n/**\n* @name randi\n* @memberof random\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/base/randi}\n*/\nsetReadOnly( random, 'randi', require( '@stdlib/random-base-randi' ) );\n\n/**\n* @name randn\n* @memberof random\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/base/randn}\n*/\nsetReadOnly( random, 'randn', require( '@stdlib/random-base-randn' ) );\n\n/**\n* @name randu\n* @memberof random\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/base/randu}\n*/\nsetReadOnly( random, 'randu', require( '@stdlib/random-base-randu' ) );\n\n/**\n* @name rayleigh\n* @memberof random\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/base/rayleigh}\n*/\nsetReadOnly( random, 'rayleigh', require( '@stdlib/random-base-rayleigh' ) );\n\n/**\n* @name reviveBasePRNG\n* @memberof random\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/base/reviver}\n*/\nsetReadOnly( random, 'reviveBasePRNG', require( '@stdlib/random-base-reviver' ) );\n\n/**\n* @name t\n* @memberof random\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/base/t}\n*/\nsetReadOnly( random, 't', require( '@stdlib/random-base-t' ) );\n\n/**\n* @name triangular\n* @memberof random\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/base/triangular}\n*/\nsetReadOnly( random, 'triangular', require( '@stdlib/random-base-triangular' ) );\n\n/**\n* @name uniform\n* @memberof random\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/base/uniform}\n*/\nsetReadOnly( random, 'uniform', require( '@stdlib/random-base-uniform' ) );\n\n/**\n* @name weibull\n* @memberof random\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/base/weibull}\n*/\nsetReadOnly( random, 'weibull', require( '@stdlib/random-base-weibull' ) );\n\n\n// EXPORTS //\n\nmodule.exports = random;\n"],
  "mappings": "aA0BA,IAAIA,EAAc,QAAS,yCAA0C,EAUjEC,EAAS,CAAC,EASdD,EAAaC,EAAQ,UAAW,QAAS,6BAA8B,CAAE,EASzED,EAAaC,EAAQ,YAAa,QAAS,+BAAgC,CAAE,EAS7ED,EAAaC,EAAQ,OAAQ,QAAS,0BAA2B,CAAE,EASnED,EAAaC,EAAQ,YAAa,QAAS,+BAAgC,CAAE,EAS7ED,EAAaC,EAAQ,WAAY,QAAS,8BAA+B,CAAE,EAS3ED,EAAaC,EAAQ,YAAa,QAAS,gCAAiC,CAAE,EAS9ED,EAAaC,EAAQ,SAAU,QAAS,4BAA6B,CAAE,EASvED,EAAaC,EAAQ,MAAO,QAAS,yBAA0B,CAAE,EASjED,EAAaC,EAAQ,YAAa,QAAS,+BAAgC,CAAE,EAS7ED,EAAaC,EAAQ,SAAU,QAAS,4BAA6B,CAAE,EASvED,EAAaC,EAAQ,kBAAmB,QAAS,sCAAuC,CAAE,EAS1FD,EAAaC,EAAQ,SAAU,QAAS,4BAA6B,CAAE,EASvED,EAAaC,EAAQ,cAAe,QAAS,iCAAkC,CAAE,EASjFD,EAAaC,EAAQ,IAAK,QAAS,uBAAwB,CAAE,EAS7DD,EAAaC,EAAQ,UAAW,QAAS,6BAA8B,CAAE,EASzED,EAAaC,EAAQ,QAAS,QAAS,2BAA4B,CAAE,EASrED,EAAaC,EAAQ,YAAa,QAAS,+BAAgC,CAAE,EAS7ED,EAAaC,EAAQ,SAAU,QAAS,4BAA6B,CAAE,EAUvED,EAAaC,EAAQ,iBAAkB,QAAS,oCAAqC,CAAE,EASvFD,EAAaC,EAAQ,mBAAoB,QAAS,uCAAwC,CAAE,EAS5FD,EAAaC,EAAQ,WAAY,QAAS,8BAA+B,CAAE,EAS3ED,EAAaC,EAAQ,cAAe,QAAS,iCAAkC,CAAE,EASjFD,EAAaC,EAAQ,UAAW,QAAS,6BAA8B,CAAE,EASzED,EAAaC,EAAQ,OAAQ,QAAS,0BAA2B,CAAE,EASnED,EAAaC,EAAQ,WAAY,QAAS,8BAA+B,CAAE,EAS3ED,EAAaC,EAAQ,YAAa,QAAS,+BAAgC,CAAE,EAS7ED,EAAaC,EAAQ,SAAU,QAAS,4BAA6B,CAAE,EASvED,EAAaC,EAAQ,gBAAiB,QAAS,oCAAqC,CAAE,EAStFD,EAAaC,EAAQ,UAAW,QAAS,6BAA8B,CAAE,EASzED,EAAaC,EAAQ,mBAAoB,QAAS,uCAAwC,CAAE,EAS5FD,EAAaC,EAAQ,SAAU,QAAS,4BAA6B,CAAE,EASvED,EAAaC,EAAQ,UAAW,QAAS,kCAAmC,CAAE,EAS9ED,EAAaC,EAAQ,UAAW,QAAS,6BAA8B,CAAE,EASzED,EAAaC,EAAQ,QAAS,QAAS,2BAA4B,CAAE,EASrED,EAAaC,EAAQ,QAAS,QAAS,2BAA4B,CAAE,EASrED,EAAaC,EAAQ,QAAS,QAAS,2BAA4B,CAAE,EASrED,EAAaC,EAAQ,WAAY,QAAS,8BAA+B,CAAE,EAS3ED,EAAaC,EAAQ,iBAAkB,QAAS,6BAA8B,CAAE,EAShFD,EAAaC,EAAQ,IAAK,QAAS,uBAAwB,CAAE,EAS7DD,EAAaC,EAAQ,aAAc,QAAS,gCAAiC,CAAE,EAS/ED,EAAaC,EAAQ,UAAW,QAAS,6BAA8B,CAAE,EASzED,EAAaC,EAAQ,UAAW,QAAS,6BAA8B,CAAE,EAKzE,OAAO,QAAUA",
  "names": ["setReadOnly", "random"]
}
